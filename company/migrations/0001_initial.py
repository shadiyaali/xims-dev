# Generated by Django 5.1.4 on 2025-03-24 09:16

import company.models
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Agenda',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='AwarenessTraining',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('category', models.CharField(choices=[('YouTube video', 'YouTube video'), ('Presentation', 'Presentation'), ('Web Link', 'Web Link')], max_length=255)),
                ('youtube_link', models.URLField(blank=True, null=True)),
                ('upload_file', models.FileField(blank=True, null=True, storage=company.models.MediaStorage(), upload_to=company.models.generate_unique_filename1)),
                ('web_link', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='BaselineReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CarNumber',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('source', models.CharField(blank=True, choices=[('Audit', 'Audit'), ('Presentation', 'Presentation'), ('Web Link', 'Web Link')], max_length=255, null=True)),
                ('root_cause', models.CharField(blank=True, choices=[('Test', 'Test')], max_length=255, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('date_raised', models.DateField(blank=True, null=True)),
                ('date_completed', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Completed', 'Completed'), ('Deleted', 'Deleted')], default='Pending', max_length=20)),
                ('action', models.IntegerField(blank=True, null=True)),
                ('action_or_corrections', models.TextField(blank=True, null=True)),
                ('send_notification', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Cause',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Compliance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('compliance_no', models.CharField(blank=True, max_length=50, null=True)),
                ('compliance_type', models.CharField(blank=True, choices=[('Legal', 'Legal'), ('Business', 'Business'), ('Client', 'Client'), ('Process/Specification', 'Process/Specification')], max_length=255, null=True)),
                ('attach_document', models.FileField(blank=True, null=True, storage=company.models.MediaStorage(), upload_to=company.models.generate_unique_filename_audit)),
                ('compliance_remarks', models.TextField(blank=True, null=True)),
                ('rivision', models.CharField(blank=True, max_length=50, null=True)),
                ('compliance_name', models.CharField(blank=True, max_length=50, null=True)),
                ('date', models.DateField(blank=True, null=True)),
                ('relate_business_process', models.CharField(blank=True, max_length=50, null=True)),
                ('relate_document', models.TextField(blank=True, null=True)),
                ('publish', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='ConformityCause',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CorrectionCause',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('city', models.CharField(blank=True, max_length=50, null=True)),
                ('state', models.CharField(blank=True, max_length=50, null=True)),
                ('zipcode', models.CharField(blank=True, max_length=50, null=True)),
                ('country', models.CharField(blank=True, max_length=50, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('contact_person', models.CharField(blank=True, max_length=50, null=True)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('alternate_phone', models.CharField(blank=True, max_length=20)),
                ('fax', models.CharField(blank=True, max_length=50, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='EmployeeEvaluation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('evaluation_title', models.CharField(max_length=100)),
                ('valid_till', models.DateField()),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='EmployeeSurvey',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('survey_title', models.CharField(max_length=100)),
                ('valid_till', models.DateField()),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='EnergyAction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_plan', models.CharField(blank=True, max_length=50, null=True)),
                ('associative_objective', models.CharField(blank=True, max_length=50, null=True)),
                ('legal_requirements', models.CharField(blank=True, max_length=50, null=True)),
                ('date', models.DateField(blank=True, null=True)),
                ('energy_improvements', models.TextField(blank=True, null=True)),
                ('title', models.CharField(blank=True, max_length=50, null=True)),
                ('upload_attachment', models.FileField(blank=True, null=True, storage=company.models.MediaStorage(), upload_to=company.models.generate_unique_filename_audit)),
                ('means', models.CharField(blank=True, max_length=50, null=True)),
                ('statement', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='EnergySource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='HealthRootCause',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='LegalRequirements',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('legal_no', models.CharField(blank=True, max_length=50, null=True)),
                ('document_type', models.CharField(blank=True, choices=[('System', 'System'), ('Paper', 'Paper'), ('External', 'External'), ('Work Instruction', 'Work Instruction')], max_length=255, null=True)),
                ('attach_document', models.FileField(blank=True, null=True, storage=company.models.MediaStorage(), upload_to=company.models.generate_unique_filename_audit)),
                ('rivision', models.CharField(blank=True, max_length=50, null=True)),
                ('legal_name', models.CharField(blank=True, max_length=50, null=True)),
                ('date', models.DateField(blank=True, null=True)),
                ('related_record_format', models.CharField(blank=True, max_length=50, null=True)),
                ('publish', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='ManagementChange',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('moc_no', models.CharField(blank=True, max_length=50, null=True)),
                ('moc_type', models.CharField(blank=True, choices=[('Manual/Procedure', 'Manual/Procedure'), ('Guideline/Policy', 'Guideline/Policy'), ('Specification/Standards', 'Specification/Standards'), ('Facility/Equipment', 'Facility/Equipment'), ('System/Process', 'System/Process')], max_length=255, null=True)),
                ('attach_document', models.FileField(blank=True, null=True, storage=company.models.MediaStorage(), upload_to=company.models.generate_unique_filename_audit)),
                ('purpose_of_chnage', models.CharField(blank=True, max_length=50, null=True)),
                ('potential_cosequences', models.CharField(blank=True, max_length=50, null=True)),
                ('moc_remarks', models.CharField(blank=True, max_length=50, null=True)),
                ('moc_title', models.CharField(blank=True, max_length=50, null=True)),
                ('date', models.DateField(blank=True, null=True)),
                ('related_record_format', models.CharField(blank=True, max_length=50, null=True)),
                ('resources_required', models.CharField(blank=True, max_length=50, null=True)),
                ('impact_on_process', models.CharField(blank=True, max_length=50, null=True)),
                ('rivision', models.CharField(blank=True, max_length=50, null=True)),
                ('publish', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Permission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('QMS', 'QMS'), ('EMS', 'EMS'), ('OHS', 'OHS'), ('EnMS', 'EnMS'), ('BMS', 'BMS'), ('AMS', 'AMS'), ('IMS', 'IMS')], max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='ProcessActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ProcessHealth',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ReviewType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='RootCause',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(blank=True, max_length=50, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('state', models.CharField(blank=True, max_length=50, null=True)),
                ('country', models.CharField(blank=True, max_length=50, null=True)),
                ('website', models.TextField(blank=True, null=True)),
                ('city', models.CharField(blank=True, max_length=50, null=True)),
                ('postal_code', models.CharField(blank=True, max_length=50, null=True)),
                ('phone', models.CharField(blank=True, max_length=50, null=True)),
                ('alternate_phone', models.CharField(blank=True, max_length=50, null=True)),
                ('fax', models.CharField(blank=True, max_length=50, null=True)),
                ('contact_person', models.CharField(blank=True, max_length=50, null=True)),
                ('qualified_to_supply', models.CharField(blank=True, max_length=50, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('analysis_needed', models.BooleanField(default=False)),
                ('resolution', models.CharField(blank=True, max_length=50, null=True)),
                ('active', models.BooleanField(default=False)),
                ('selection_criteria', models.CharField(blank=True, max_length=50, null=True)),
                ('status', models.CharField(choices=[('Approved', 'Approved'), ('Provisional', 'Provisional'), ('Not Approved', 'Not Approved')], default='Approved', max_length=20)),
                ('approved_date', models.DateField(blank=True, null=True)),
                ('pre_qualification', models.FileField(blank=True, null=True, storage=company.models.MediaStorage(), upload_to=company.models.generate_unique_filename_audit)),
            ],
        ),
        migrations.CreateModel(
            name='TargetsP',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('target', models.CharField(blank=True, max_length=50, null=True)),
                ('associative_objective', models.CharField(blank=True, max_length=50, null=True)),
                ('target_date', models.DateField(blank=True, null=True)),
                ('reminder_date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('On Going', 'On Going'), ('Achieved', 'Achieved'), ('Not Achieved', 'Not Achieved'), ('Modified', 'Modified')], default='On Going', max_length=20)),
                ('results', models.TextField(blank=True, null=True)),
                ('title', models.CharField(blank=True, max_length=50, null=True)),
                ('upload_attachment', models.FileField(blank=True, null=True, storage=company.models.MediaStorage(), upload_to=company.models.generate_unique_filename_audit)),
            ],
        ),
        migrations.CreateModel(
            name='Baseline',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('basline_title', models.CharField(blank=True, max_length=50, null=True)),
                ('established_basline', models.CharField(blank=True, max_length=50, null=True)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('date', models.DateField(blank=True, null=True)),
                ('energy_review', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='company.baselinereview')),
            ],
        ),
        migrations.CreateModel(
            name='Enpis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enpi', models.CharField(blank=True, max_length=50, null=True)),
                ('baseline', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='enpis', to='company.baseline')),
            ],
        ),
        migrations.CreateModel(
            name='Manual',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('no', models.CharField(blank=True, max_length=50, null=True)),
                ('document_type', models.CharField(blank=True, choices=[('System', 'System'), ('Paper', 'Paper'), ('External', 'External'), ('Work Instruction', 'Work Instruction')], max_length=255, null=True)),
                ('review_frequency_year', models.TextField(blank=True, null=True)),
                ('review_frequency_month', models.TextField(blank=True, null=True)),
                ('upload_attachment', models.FileField(blank=True, null=True, storage=company.models.MediaStorage(), upload_to=company.models.generate_unique_filename_audit)),
                ('title', models.CharField(blank=True, max_length=50, null=True)),
                ('rivision', models.CharField(blank=True, max_length=50, null=True)),
                ('date', models.DateField(blank=True, null=True)),
                ('send_notification', models.BooleanField(default=False)),
                ('publish', models.BooleanField(default=False)),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='manual', to='accounts.company')),
            ],
        ),
        migrations.CreateModel(
            name='Program',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Program', models.CharField(blank=True, max_length=50, null=True)),
                ('energy_action', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='programs', to='company.energyaction')),
            ],
        ),
        migrations.CreateModel(
            name='CustomerSatisfaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=50, null=True)),
                ('calid_till', models.DateField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('answer', models.IntegerField(blank=True, null=True)),
                ('customer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='company.customer')),
                ('questions', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='company.question')),
            ],
        ),
        migrations.CreateModel(
            name='EnergyReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('review_no', models.CharField(blank=True, max_length=50, null=True)),
                ('rivision', models.CharField(blank=True, max_length=50, null=True)),
                ('upload_attachment', models.FileField(blank=True, null=True, storage=company.models.MediaStorage(), upload_to=company.models.generate_unique_filename_audit)),
                ('date', models.DateField(blank=True, null=True)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('energy_name', models.CharField(blank=True, max_length=50, null=True)),
                ('relate_business_process', models.CharField(blank=True, max_length=20, null=True)),
                ('relate_document_process', models.CharField(blank=True, max_length=20, null=True)),
                ('publish', models.BooleanField(default=False)),
                ('review_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='company.reviewtype')),
            ],
        ),
        migrations.CreateModel(
            name='SignificantEnergy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('significant', models.CharField(blank=True, max_length=50, null=True)),
                ('upload_attachment', models.FileField(blank=True, null=True, storage=company.models.MediaStorage(), upload_to=company.models.generate_unique_filename_audit)),
                ('consumption', models.CharField(blank=True, max_length=50, null=True)),
                ('consequences', models.CharField(blank=True, max_length=50, null=True)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('title', models.CharField(blank=True, max_length=50, null=True)),
                ('date', models.DateField(blank=True, null=True)),
                ('facility', models.CharField(blank=True, max_length=50, null=True)),
                ('action', models.CharField(blank=True, max_length=50, null=True)),
                ('impact', models.CharField(blank=True, max_length=50, null=True)),
                ('rivision', models.CharField(blank=True, max_length=50, null=True)),
                ('publish', models.BooleanField(default=False)),
                ('source_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='company.energysource')),
            ],
        ),
        migrations.CreateModel(
            name='TProgram',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Program', models.CharField(blank=True, max_length=50, null=True)),
                ('targets', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='programs', to='company.targetsp')),
            ],
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=255, null=True, unique=True)),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(max_length=255)),
                ('password', models.CharField(max_length=255)),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], max_length=255)),
                ('date_of_birth', models.DateField()),
                ('address', models.TextField()),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('zip_po_box', models.CharField(blank=True, max_length=20, null=True)),
                ('province_state', models.CharField(blank=True, max_length=100, null=True)),
                ('country', models.CharField(default=True, max_length=50, null=True)),
                ('department_division', models.CharField(blank=True, max_length=100, null=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone', models.CharField(blank=True, max_length=15, null=True)),
                ('office_phone', models.CharField(blank=True, max_length=15, null=True)),
                ('mobile_phone', models.CharField(blank=True, max_length=15, null=True)),
                ('fax', models.CharField(blank=True, max_length=15, null=True)),
                ('secret_question', models.CharField(max_length=100)),
                ('answer', models.CharField(max_length=100)),
                ('user_logo', models.ImageField(blank=True, null=True, storage=company.models.MediaStorage(), upload_to=company.models.generate_profile_filename)),
                ('notes', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('live', 'live'), ('blocked', 'Blocked')], default='live', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='usercomp', to='accounts.company')),
                ('permissions', models.ManyToManyField(blank=True, to='company.permission')),
            ],
        ),
        migrations.CreateModel(
            name='Training',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('training_title', models.CharField(max_length=100)),
                ('expected_results', models.TextField(blank=True, null=True)),
                ('actual_results', models.TextField(blank=True, null=True)),
                ('type_of_training', models.CharField(choices=[('Internal', 'Internal'), ('External', 'External'), ('Client/Legal', 'Client/Legal'), ('Online', 'Online')], default='Internal', max_length=20)),
                ('status', models.CharField(choices=[('Requested', 'Requested'), ('Completed', 'Completed')], default='Requested', max_length=20)),
                ('date_planned', models.DateField()),
                ('date_conducted', models.DateField()),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('venue', models.CharField(max_length=255)),
                ('attachment', models.FileField(blank=True, null=True, storage=company.models.MediaStorage(), upload_to=company.models.generate_unique_filename_training)),
                ('training_evaluation', models.TextField(blank=True, null=True)),
                ('evaluation_date', models.DateField()),
                ('send_notification', models.BooleanField(default=False)),
                ('evaluation_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='evaluation_by', to='company.users')),
                ('requested_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='training_requested_by', to='company.users')),
                ('training_attendees', models.ManyToManyField(blank=True, related_name='training_attendees', to='company.users')),
            ],
        ),
        migrations.AddField(
            model_name='targetsp',
            name='responsible',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_targets', to='company.users'),
        ),
        migrations.CreateModel(
            name='Sustainability',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, null=True)),
                ('relate_document', models.CharField(blank=True, max_length=50, null=True)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('sustainability_name', models.CharField(blank=True, max_length=50, null=True)),
                ('sustainability_type', models.CharField(blank=True, max_length=50, null=True)),
                ('rivision', models.CharField(blank=True, max_length=50, null=True)),
                ('attach_document', models.FileField(blank=True, null=True, storage=company.models.MediaStorage(), upload_to=company.models.generate_unique_filename_audit)),
                ('publish', models.BooleanField(default=False)),
                ('send_notification', models.BooleanField(default=False)),
                ('sustainability_no', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sustainability', to='company.compliance')),
                ('approved_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_sustainability', to='company.users')),
                ('checked_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='checked_sustainability', to='company.users')),
                ('written_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='written_sustainability', to='company.users')),
            ],
        ),
        migrations.CreateModel(
            name='SupplierProblem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('problem', models.TextField(blank=True, null=True)),
                ('corrective_action_need', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='Yes', max_length=50)),
                ('date', models.DateField(blank=True, null=True)),
                ('immediate_action', models.TextField(blank=True, null=True)),
                ('solved', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='Yes', max_length=50)),
                ('no_car', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='company.carnumber')),
                ('supplier', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='company.supplier')),
                ('executor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='company.users')),
            ],
        ),
        migrations.AddField(
            model_name='supplier',
            name='approved_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='company.users'),
        ),
        migrations.CreateModel(
            name='RiskAssessment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assessment_no', models.CharField(blank=True, max_length=50, null=True)),
                ('related_record_format', models.CharField(blank=True, max_length=50, null=True)),
                ('date', models.DateField(blank=True, null=True)),
                ('document_type', models.CharField(blank=True, choices=[('System', 'System'), ('Paper', 'Paper'), ('External', 'External'), ('Work Instruction', 'Work Instruction')], max_length=255, null=True)),
                ('assessment_name', models.CharField(blank=True, max_length=50, null=True)),
                ('upload_attachment', models.FileField(blank=True, null=True, storage=company.models.MediaStorage(), upload_to=company.models.generate_unique_filename_audit)),
                ('rivision', models.CharField(blank=True, max_length=50, null=True)),
                ('send_notification', models.BooleanField(default=False)),
                ('public', models.BooleanField(default=False)),
                ('approved_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_assessment', to='company.users')),
                ('checked_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='checked_assessment', to='company.users')),
                ('written_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='written_assessment', to='company.users')),
            ],
        ),
        migrations.CreateModel(
            name='RecordFormat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('no', models.CharField(blank=True, max_length=50, null=True)),
                ('document_type', models.CharField(blank=True, choices=[('System', 'System'), ('Paper', 'Paper'), ('External', 'External'), ('Work Instruction', 'Work Instruction')], max_length=255, null=True)),
                ('review_frequency_year', models.TextField(blank=True, null=True)),
                ('review_frequency_month', models.TextField(blank=True, null=True)),
                ('retention', models.CharField(blank=True, max_length=50, null=True)),
                ('upload_attachment', models.FileField(blank=True, null=True, storage=company.models.MediaStorage(), upload_to=company.models.generate_unique_filename_audit)),
                ('title', models.CharField(blank=True, max_length=50, null=True)),
                ('rivision', models.CharField(blank=True, max_length=50, null=True)),
                ('date', models.DateField(blank=True, null=True)),
                ('send_notification', models.BooleanField(default=False)),
                ('publish', models.BooleanField(default=False)),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='record', to='accounts.company')),
                ('approved_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_record', to='company.users')),
                ('checked_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='checkedrecord', to='company.users')),
                ('written_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='written_record', to='company.users')),
            ],
        ),
        migrations.CreateModel(
            name='Procedure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('no', models.CharField(blank=True, max_length=50, null=True)),
                ('document_type', models.CharField(blank=True, choices=[('System', 'System'), ('Paper', 'Paper'), ('External', 'External'), ('Work Instruction', 'Work Instruction')], max_length=255, null=True)),
                ('review_frequency_year', models.TextField(blank=True, null=True)),
                ('review_frequency_month', models.TextField(blank=True, null=True)),
                ('relate_format', models.CharField(blank=True, max_length=50, null=True)),
                ('upload_attachment', models.FileField(blank=True, null=True, storage=company.models.MediaStorage(), upload_to=company.models.generate_unique_filename_audit)),
                ('title', models.CharField(blank=True, max_length=50, null=True)),
                ('rivision', models.CharField(blank=True, max_length=50, null=True)),
                ('date', models.DateField(blank=True, null=True)),
                ('send_notification', models.BooleanField(default=False)),
                ('publish', models.BooleanField(default=False)),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='procedure', to='accounts.company')),
                ('approved_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_procedure', to='company.users')),
                ('checked_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='checked_procedure', to='company.users')),
                ('written_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='written_procedure', to='company.users')),
            ],
        ),
        migrations.CreateModel(
            name='PreventiveAction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('date_raised', models.DateField(blank=True, null=True)),
                ('date_completed', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Completed', 'Completed')], default='Pending', max_length=20)),
                ('action', models.TextField(blank=True, null=True)),
                ('send_notification', models.BooleanField(default=False)),
                ('executor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='company.users')),
            ],
        ),
        migrations.CreateModel(
            name='PolicyOhs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(blank=True, null=True)),
                ('energy_policy', models.FileField(blank=True, null=True, storage=company.models.MediaStorage(), upload_to=company.models.generate_unique_filename)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='policy_documentse', to='accounts.company')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='policy_documentse', to='company.users')),
            ],
        ),
        migrations.CreateModel(
            name='PolicyIMS',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(blank=True, null=True)),
                ('energy_policy', models.FileField(blank=True, null=True, storage=company.models.MediaStorage(), upload_to=company.models.generate_unique_filename)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='policy_documentsa', to='accounts.company')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='policy_documentsa', to='company.users')),
            ],
        ),
        migrations.CreateModel(
            name='PolicyEnv',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(blank=True, null=True)),
                ('energy_policy', models.FileField(blank=True, null=True, storage=company.models.MediaStorage(), upload_to=company.models.generate_unique_filename)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='policy_documentsf', to='accounts.company')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='policy_documentsf', to='company.users')),
            ],
        ),
        migrations.CreateModel(
            name='PolicyEnms',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(blank=True, null=True)),
                ('energy_policy', models.FileField(blank=True, null=True, storage=company.models.MediaStorage(), upload_to=company.models.generate_unique_filename)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='policy_documentsd', to='accounts.company')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='policy_documentsd', to='company.users')),
            ],
        ),
        migrations.CreateModel(
            name='PolicyDocumentation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(blank=True, null=True)),
                ('energy_policy', models.FileField(blank=True, null=True, storage=company.models.MediaStorage(), upload_to=company.models.generate_unique_filename)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='policy_documents', to='accounts.company')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='policy_documents', to='company.users')),
            ],
        ),
        migrations.CreateModel(
            name='PolicyBMS',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(blank=True, null=True)),
                ('energy_policy', models.FileField(blank=True, null=True, storage=company.models.MediaStorage(), upload_to=company.models.generate_unique_filename)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='policy_documentsc', to='accounts.company')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='policy_documentsc', to='company.users')),
            ],
        ),
        migrations.CreateModel(
            name='PolicyAMS',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(blank=True, null=True)),
                ('energy_policy', models.FileField(blank=True, null=True, storage=company.models.MediaStorage(), upload_to=company.models.generate_unique_filename)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='policy_documentsb', to='accounts.company')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='policy_documentsb', to='company.users')),
            ],
        ),
        migrations.CreateModel(
            name='Objectives',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('objective', models.CharField(blank=True, max_length=255, null=True)),
                ('performance', models.TextField(blank=True, null=True)),
                ('target_date', models.DateField(blank=True, null=True)),
                ('reminder_date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('On Going', 'On Going'), ('Achieved', 'Achieved'), ('Not Achieved', 'Not Achieved'), ('Modified', 'Modified')], default='On Going', max_length=20)),
                ('indicator', models.CharField(blank=True, max_length=255, null=True)),
                ('responsible', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_planobjectives', to='company.users')),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('is_read', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('manual', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='company.manual')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='company.users')),
            ],
        ),
        migrations.CreateModel(
            name='Meeting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('date', models.DateField(blank=True, null=True)),
                ('start_time', models.TimeField(blank=True, null=True)),
                ('end_time', models.TimeField(blank=True, null=True)),
                ('meeting_type', models.CharField(choices=[('Normal', 'Normal'), ('Specific', 'Specific')], default='Normal', max_length=50)),
                ('venue', models.CharField(blank=True, max_length=255, null=True)),
                ('is_published', models.BooleanField(default=False)),
                ('send_notification', models.BooleanField(default=False)),
                ('minutes', models.TextField(blank=True, null=True)),
                ('minutes_attached', models.FileField(blank=True, null=True, storage=company.models.MediaStorage(), upload_to=company.models.generate_unique_filename_minute)),
                ('agenda', models.ManyToManyField(blank=True, related_name='agenda', to='company.agenda')),
                ('attendees', models.ManyToManyField(blank=True, related_name='meeting_attendees', to='company.users')),
                ('called_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='company.users')),
            ],
        ),
        migrations.AddField(
            model_name='manual',
            name='approved_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_manual', to='company.users'),
        ),
        migrations.AddField(
            model_name='manual',
            name='checked_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='checked_manual', to='company.users'),
        ),
        migrations.AddField(
            model_name='manual',
            name='written_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='written_manual', to='company.users'),
        ),
        migrations.CreateModel(
            name='InternalProblems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_taken', models.TextField(blank=True, null=True)),
                ('date', models.DateField(blank=True, null=True)),
                ('corrective_action', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='Yes', max_length=50)),
                ('problem', models.TextField(blank=True, null=True)),
                ('solved_after_action', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='Yes', max_length=50)),
                ('corrections', models.TextField(blank=True, null=True)),
                ('cause', models.ManyToManyField(blank=True, related_name='agenda', to='company.cause')),
                ('no_car', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='company.carnumber')),
                ('executor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='company.users')),
            ],
        ),
        migrations.CreateModel(
            name='Inspection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=50, null=True)),
                ('inspector_from', models.CharField(blank=True, max_length=50, null=True)),
                ('area', models.CharField(blank=True, max_length=50, null=True)),
                ('proposed_date', models.DateField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('certification_body', models.CharField(blank=True, max_length=50, null=True)),
                ('inspector_type', models.CharField(blank=True, max_length=50, null=True)),
                ('procedures', models.CharField(blank=True, choices=[('Test', 'Test')], max_length=255, null=True)),
                ('date_conducted', models.DateField(blank=True, null=True)),
                ('upload_inspection_report', models.FileField(blank=True, null=True, storage=company.models.MediaStorage(), upload_to=company.models.generate_unique_filename_audit)),
                ('upload_non_coformities_report', models.FileField(blank=True, null=True, storage=company.models.MediaStorage(), upload_to=company.models.generate_unique_filename_audit)),
                ('inspector_from_internal', models.ManyToManyField(blank=True, related_name='inspector_users', to='company.users')),
            ],
        ),
        migrations.CreateModel(
            name='HealthSafety',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hazard_source', models.CharField(blank=True, max_length=50, null=True)),
                ('hazard', models.CharField(blank=True, max_length=50, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('date', models.DateField(blank=True, null=True)),
                ('level_of_risk', models.CharField(blank=True, choices=[('High', 'High'), ('Medium', 'Medium'), ('Low', 'Low')], max_length=255, null=True)),
                ('hazard_name', models.CharField(blank=True, max_length=50, null=True)),
                ('legal_requirement', models.CharField(blank=True, max_length=50, null=True)),
                ('action', models.CharField(blank=True, max_length=50, null=True)),
                ('process_activity', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='company.processhealth')),
                ('approved_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_hazard', to='company.users')),
                ('checked_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='checked_hazard', to='company.users')),
                ('written_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='written_hazard', to='company.users')),
            ],
        ),
        migrations.CreateModel(
            name='HealthIncidents',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source', models.CharField(blank=True, max_length=50, null=True)),
                ('incident', models.CharField(blank=True, max_length=50, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('date_raised', models.DateField(blank=True, null=True)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('title', models.CharField(blank=True, max_length=50, null=True)),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Completed', 'Completed'), ('Deleted', 'Deleted')], default='Pending', max_length=20)),
                ('action', models.TextField(blank=True, null=True)),
                ('date_completed', models.DateField(blank=True, null=True)),
                ('send_notification', models.BooleanField(default=False)),
                ('root_cause', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='company.healthrootcause')),
                ('reported_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_health_incidents', to='company.users')),
            ],
        ),
        migrations.CreateModel(
            name='EnvironmentalWaste',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('wmp', models.CharField(blank=True, max_length=50, null=True)),
                ('originator', models.CharField(blank=True, max_length=50, null=True)),
                ('waste_type', models.CharField(blank=True, max_length=50, null=True)),
                ('waste_quantity', models.TextField(blank=True, null=True)),
                ('location', models.CharField(blank=True, max_length=50, null=True)),
                ('waste_handling', models.CharField(blank=True, choices=[('Company', 'Company'), ('Client', 'Client'), ('Contractor', 'Contractor'), ('Third Party/Others', 'Third Party/Others')], max_length=255, null=True)),
                ('waste_category', models.CharField(blank=True, choices=[('Hazardous', 'Hazardous'), ('Non Hazardous', 'Non Hazardous')], max_length=255, null=True)),
                ('waste_minimization', models.CharField(blank=True, choices=[('Reuse', 'Reuse'), ('Recycle', 'Recycle'), ('Recovery', 'Recovery'), ('Disposal', 'Disposal'), ('Non Disposable', 'Non Disposable')], max_length=255, null=True)),
                ('responsible_party', models.CharField(blank=True, max_length=50, null=True)),
                ('legal_requirement', models.CharField(blank=True, max_length=50, null=True)),
                ('remark', models.TextField(blank=True, null=True)),
                ('approved_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_waste', to='company.users')),
                ('checked_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='checked_waste', to='company.users')),
                ('written_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='written_waste', to='company.users')),
            ],
        ),
        migrations.CreateModel(
            name='EnvironmentalIncidents',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source', models.CharField(blank=True, max_length=50, null=True)),
                ('incident', models.CharField(blank=True, max_length=50, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('date_raised', models.DateField(blank=True, null=True)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('title', models.CharField(blank=True, max_length=50, null=True)),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Completed', 'Completed'), ('Deleted', 'Deleted')], default='Pending', max_length=20)),
                ('action', models.TextField(blank=True, null=True)),
                ('date_completed', models.DateField(blank=True, null=True)),
                ('send_notification', models.BooleanField(default=False)),
                ('root_cause', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='company.rootcause')),
                ('reported_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_incidents', to='company.users')),
            ],
        ),
        migrations.CreateModel(
            name='EnvironmentalImpact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('impact_assessment', models.CharField(blank=True, max_length=50, null=True)),
                ('related_record', models.CharField(blank=True, max_length=50, null=True)),
                ('date', models.DateField(blank=True, null=True)),
                ('assessment_name', models.CharField(blank=True, max_length=50, null=True)),
                ('rivision', models.CharField(blank=True, max_length=50, null=True)),
                ('attach_document', models.FileField(blank=True, null=True, storage=company.models.MediaStorage(), upload_to=company.models.generate_unique_filename_audit)),
                ('document_type', models.CharField(blank=True, choices=[('System', 'System'), ('Paper', 'Paper'), ('External', 'External'), ('Work Instruction', 'Work Instruction')], max_length=255, null=True)),
                ('send_notification', models.BooleanField(default=False)),
                ('public', models.BooleanField(default=False)),
                ('approved_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_impact', to='company.users')),
                ('checked_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='checked_impact', to='company.users')),
                ('written_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='written_impact', to='company.users')),
            ],
        ),
        migrations.CreateModel(
            name='EnvironmentalAspect',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('aspect_source', models.CharField(blank=True, max_length=50, null=True)),
                ('aspect', models.CharField(blank=True, max_length=50, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('date', models.DateField(blank=True, null=True)),
                ('level_of_impact', models.CharField(blank=True, choices=[('Significant', 'Significant'), ('Non Significant', 'Non Significant')], max_length=255, null=True)),
                ('aspect_name', models.CharField(blank=True, max_length=50, null=True)),
                ('legal_requirement', models.CharField(blank=True, max_length=50, null=True)),
                ('action', models.CharField(blank=True, max_length=50, null=True)),
                ('send_notification', models.BooleanField(default=False)),
                ('process_activity', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='company.processactivity')),
                ('approved_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_aspect', to='company.users')),
                ('checked_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='checked_aspect', to='company.users')),
                ('written_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='written_aspect', to='company.users')),
            ],
        ),
        migrations.CreateModel(
            name='EnergyImprovement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('eio', models.CharField(blank=True, max_length=50, null=True)),
                ('target', models.CharField(blank=True, max_length=50, null=True)),
                ('results', models.TextField(blank=True, null=True)),
                ('date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('On Going', 'On Going'), ('Achieved', 'Achieved'), ('Not Achieved', 'Not Achieved'), ('Modified', 'Modified')], default='On Going', max_length=20)),
                ('eio_title', models.CharField(blank=True, max_length=50, null=True)),
                ('associated_objective', models.CharField(blank=True, max_length=50, null=True)),
                ('upload_attachment', models.FileField(blank=True, null=True, storage=company.models.MediaStorage(), upload_to=company.models.generate_unique_filename_audit)),
                ('responsible', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_energy_improvements', to='company.users')),
            ],
        ),
        migrations.AddField(
            model_name='energyaction',
            name='responsible',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_energy_action_plan', to='company.users'),
        ),
        migrations.CreateModel(
            name='CorrectiveAction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source', models.CharField(blank=True, choices=[('Audit', 'Audit'), ('Customer', 'Customer'), ('Internal', 'Internal'), ('Supplier', 'Supplier')], max_length=255, null=True)),
                ('action', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('date_raised', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Completed', 'Completed'), ('Deleted', 'Deleted')], default='Pending', max_length=20)),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('action_corrections', models.TextField(blank=True, null=True)),
                ('date_completed', models.DateField(blank=True, null=True)),
                ('send_notification', models.BooleanField(default=False)),
                ('root_cause', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='company.correctioncause')),
                ('executor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='company.users')),
            ],
        ),
        migrations.CreateModel(
            name='Conformity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source', models.CharField(blank=True, choices=[('Audit', 'Audit'), ('Customer', 'Customer'), ('Internal', 'Internal'), ('Supplier', 'Supplier')], max_length=255, null=True)),
                ('ncr', models.CharField(blank=True, max_length=50, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('date_raised', models.DateField(blank=True, null=True)),
                ('date_completed', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Completed', 'Completed'), ('Deleted', 'Deleted')], default='Pending', max_length=20)),
                ('title', models.CharField(blank=True, max_length=50, null=True)),
                ('resolution', models.TextField(blank=True, null=True)),
                ('send_notification', models.BooleanField(default=False)),
                ('root_cause', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='company.conformitycause')),
                ('executor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='company.users')),
            ],
        ),
        migrations.CreateModel(
            name='ComplianceEvaluation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, null=True)),
                ('relate_document', models.CharField(blank=True, max_length=50, null=True)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('complaice_name', models.CharField(blank=True, max_length=50, null=True)),
                ('compliance_type', models.CharField(blank=True, choices=[('Legal', 'Legal'), ('Business', 'Business'), ('Client', 'Client'), ('Process/Specification', 'Process/Specification')], max_length=255, null=True)),
                ('rivision', models.CharField(blank=True, max_length=50, null=True)),
                ('attach_document', models.FileField(blank=True, null=True, storage=company.models.MediaStorage(), upload_to=company.models.generate_unique_filename_audit)),
                ('publish', models.BooleanField(default=False)),
                ('send_notification', models.BooleanField(default=False)),
                ('compliance_no', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='compliance_evaluations', to='company.compliance')),
                ('approved_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_compliance_evaluations', to='company.users')),
                ('checked_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='checked_compliance_evaluations', to='company.users')),
                ('written_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='written_compliance_evaluations', to='company.users')),
            ],
        ),
        migrations.CreateModel(
            name='Complaints',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('details', models.TextField(blank=True, null=True)),
                ('corrections', models.CharField(blank=True, max_length=50, null=True)),
                ('solved_after_action', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='Yes', max_length=50)),
                ('immediate_action', models.TextField(blank=True, null=True)),
                ('date', models.DateField(blank=True, null=True)),
                ('corrective_action_need', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='Yes', max_length=50)),
                ('upload_attachment', models.FileField(blank=True, null=True, storage=company.models.MediaStorage(), upload_to=company.models.generate_unique_filename_audit)),
                ('category', models.ManyToManyField(blank=True, related_name='category', to='company.category')),
                ('no_car', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='company.carnumber')),
                ('customer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='company.customer')),
                ('executor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='company.users')),
            ],
        ),
        migrations.AddField(
            model_name='carnumber',
            name='executor',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='company.users'),
        ),
        migrations.CreateModel(
            name='BusinessRisk',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('risk_no', models.CharField(blank=True, max_length=50, null=True)),
                ('business_process', models.CharField(blank=True, max_length=50, null=True)),
                ('remark', models.TextField(blank=True, null=True)),
                ('date', models.DateField(blank=True, null=True)),
                ('document_type', models.CharField(blank=True, choices=[('System', 'System'), ('Paper', 'Paper'), ('External', 'External'), ('Work Instruction', 'Work Instruction')], max_length=255, null=True)),
                ('level_of_risk', models.CharField(blank=True, choices=[('High', 'High'), ('Medium', 'Medium'), ('Low', 'Low')], max_length=255, null=True)),
                ('business_name', models.CharField(blank=True, max_length=50, null=True)),
                ('rivision', models.CharField(blank=True, max_length=50, null=True)),
                ('upload_attachment', models.FileField(blank=True, null=True, storage=company.models.MediaStorage(), upload_to=company.models.generate_unique_filename_audit)),
                ('send_notification', models.BooleanField(default=False)),
                ('public', models.BooleanField(default=False)),
                ('approved_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_risk', to='company.users')),
                ('checked_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='checked_risk', to='company.users')),
                ('written_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='written_risk', to='company.users')),
            ],
        ),
        migrations.AddField(
            model_name='baseline',
            name='responsible',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_baseline', to='company.users'),
        ),
        migrations.CreateModel(
            name='Audit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=50, null=True)),
                ('audit_from', models.CharField(blank=True, max_length=50, null=True)),
                ('area', models.CharField(blank=True, max_length=50, null=True)),
                ('proposed_date', models.DateField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('certification_body', models.CharField(blank=True, max_length=50, null=True)),
                ('audit_type', models.CharField(choices=[('Internal', 'Internal'), ('External', 'External')], default='Internal', max_length=50)),
                ('procedures', models.CharField(blank=True, choices=[('Test', 'Test')], max_length=255, null=True)),
                ('date_conducted', models.DateField(blank=True, null=True)),
                ('upload_audit_report', models.FileField(blank=True, null=True, storage=company.models.MediaStorage(), upload_to=company.models.generate_unique_filename_audit)),
                ('upload_non_coformities_report', models.FileField(blank=True, null=True, storage=company.models.MediaStorage(), upload_to=company.models.generate_unique_filename_audit)),
                ('audit_from_internal', models.ManyToManyField(blank=True, related_name='users', to='company.users')),
            ],
        ),
    ]
